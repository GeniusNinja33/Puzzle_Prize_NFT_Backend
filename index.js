const express = require("express");
const bodyParser = require("body-parser");
const helmet = require("helmet");
const cors = require("cors");
const dotenv = require("dotenv");

//Merkle Tree
const { MerkleTree } = require("merkletreejs");
const keccak256 = require("keccak256");

dotenv.config();

const PORT = process.env.PORT || 9000;

const app = express();

app.use(helmet());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

var corsOptions = {
  origin: "*",
  optionsSuccessStatus: 200, // For legacy browser support
};

app.use(cors(corsOptions));

// Ethereum addresses

let addresses = [
  "0x4dc7CA53b4741aeF801c5a1fc3b0f0D3630399B6",
  "0x4Ba7b6B644e1Ffa02d1daBBbd25BcCa9C2A87baB",
  "0xD207D591336F9105D1C3FEa41bff9CF6aa7138D6",
  "0x62C8dc466313DDd31c47309798dfABaa4BA32cE2",
  "0x28eb43C93fd4894968E3c98955be1B236B732d03",
  "0xf043a42CdD7a92C688C38c4d4450669c792e051e",
  "0xFB7D12400b8FdaE54373167b63dfC84FbC629cd2",
  "0x4C5Ef9946E25b3Ee3C31D45DEEFc67361EaB1472",
  "0xF954a9B0C28577Ce683A19cB2Dc36952FcA607b9",
  "0x2B7f38C1CCC6085C6b24441b1Db4c94F74c06D97",
  "0x92C4975AF473951bFBD1b66A6676e7d845320b81",
  "0x3eE7f28C7092A028FB623Bbeb6B41c2211566CfB",
  "0x7720465927011A8E09E01646Be9Ce5c19230a117",
  "0x0304d4EB38c3EcC2D0b88c62a8A8Fe231F17bd85",
  "0xE9022fCc6b9c8a5c24398562d3bB41102828B3a0",
  "0xbf228e787CD78d4cb76bD936CE146139FB988183",
  "0x61B93bAa1b7b859561d968263215026213526623",
  "0x9C28D28fBf2C01f0A9c5F282ADd79c7dfa24AE7B",
  "0xFf5c364e0c0AfA69AD1b2b7D4a55Be44044e6D98",
  "0x19C9Fd892967f3A9C26a130Ac5fd45A3FC573Da8",
  "0x45cbD6E9BD80147a292f17e874416a123a10DbE3",
  "0xC270a70ab0E5ec6D77f7fA4920538478b48045Fc",
  "0x65cC81cB8736c8599Cc32FB0861f8FD3eBF44cb6",
  "0x205B19Edb7f5401598d85F7d81421C255f580DfD",
  "0x7742D0a6819300be1AE6DCf22bf725Ba8760494A",
  "0x2e91b87e06ECD9fd5203308ae8915f615D9310a0",
  "0xF56DB39cA6142285db1594536eD93262c56b0e3b",
  "0x486D7a081196f60EeB9a70B30588b4b6E250A01A",
  "0x580FF5424b8408721610a0D7e4FdE2aB5bf5CD87",
  "0x1F5166D2F9eA557978e25581a484bD0d110A1544",
  "0x6e4EDdAac0c50f923E5EEbBfA6EfD6EB52c38c7c",
  "0x8039c5ad81284C656723E7A7965dEb0cdda43c59",
  "0x66cB998C77ba7002bE4f3a536b9240118523205B",
  "0x68c990e1e5adbdf2aa551ae73b019ad78ace9a26",
  "0x9f8C94729Ba042f42c97a4f5743f051773B8F306",
  "0x56ED19f64e333347DD8C8C2c777CDc7fD71c8Fc9",
  "0x0B8fD740e8C0fd6F8aB29f290AEF47543Dc32a18",
  "0x440ee8d223FD33A91fe42c4b22B19C3e465A5032",
  "0xe3bbE79C0B782d963e6D50e6Fed9009A386Dfe20",
  "0x18e0FafEC43a743286e87D32c8bfC57404B3C543",
  "0xA50B7f8bD00220d955d901a2c844333fd403D20f",
  "0x01398033a75fe62B7E602d92fEE4A222a44B93b4",
  "0xf3606a4F938a2064d195404eC300C5E774Ea375F",
  "0x4BA429e2869017BB62aF2f030270026e29Cf4bfD",
  "0x1FBb3a6fdbc249b33F35cbb39343a9d4D62C8a3F",
  "0xE0484f6811a92DCEd52fbC0dAd264aDb860363Ab",
  "0x4BB9eAdcB444F48406a3d1A6Bb1C47152D9077BB",
  "0x0480F70d801d2e12bBA94b5f8C8A7e5b562a8092",
  "0xAb2274774c6f0E3160bee5234DBeEe76Fe133c73",
  "0xb0FBF827038A934347062B5272394562D749c90b",
  "0x6740542Db81189a5CA0158e2e015733CF3D14e49",
  "0xb4553c3B67d1fDFf6F26Db717c18312E90Ee0961",
  "0x9e5A4B17a78fBEd7480Ee0D938Fea0E10100DAca",
  "0x3424acBeBD54628043B56A0E37AE068f4e71aD40",
  "0x9d59324f28c401Bdc05A57b9C751A8ab4a9E9d78",
  "0x1a07D735eE237e1D27F851DF658623e6b5c93220",
  "0x0a814F923af41203D235Bf19358eFe156C1698bB",
  "0xAa71D9D33c6B0d7788C830eF8968bCFbE114823C",
  "0xD51b522EEA65d7e7bFD1dbd3Fea21aadB6E803E5",
  "0x173a29feE88Ed267EA2b6F52719d862Cf4fF1386",
  "0x5df64191fC251edC5C5aDF8B222a6bB675Ed3Ddd",
  "0xbB0817834821310eEb50a34F6f834Cb97Af6a18B",
  "0x0345475BECDDE3fe93cE95E45394C7502708727B",
  "0x23e3F0edf0b06074d583d11116C4463Be128fd89",
  "0x8004A9dB6fff9A0Ac060B674C36EFa2e392977EE",
  "0x6593701a6c5f32563Be3AA91EEDA67BFDD9D7d40",
  "0xA031dA2f2a8831c476361E50F74e391e9D7eF3C0",
  "0xa225eED7c6a1a968219E1B852AC5F466c09595ab",
  "0x333Db4c3EA1fF9212bB5243269870c74DF29B9bD",
  "0x36F34c956a25AEe6bE9a8788cdCfB78C75456232",
  "0xB7c148946e81A835d68E1e603Fbbc7F69Cb98dEB",
  "0x2f4AdbA7e691A4f195838c34B165B8f38869Fd66",
  "0x548C486CC7e90146Cff10CfC89c570C6B51219EB",
  "0x2940F9aC43E71410A98d506a356fc47838f5f95F",
  "0x61b9796A4a70Ce6e412C168b6bAeE5C4CB3408Fb",
  "0xD97Cd09F3b63D4747b132a4E6F1E803B57683D70",
  "0x062Bbf713A3c4F32b0edBAcB6C487E73694941C6",
  "0xA6A015b905F9dc3a3FA7eD13111D9278314e6d3D",
  "0x3Fe33d1879007496D662d84e1da3cFB4a47EA1f3",
  "0x78D6a85F2Eb5Eb846b61C479f39C7384ed825314",
  "0x39575C220d99e41D32fcB3c6988E44cD6382c9e1",
  "0x59Ad384B197cdFf0B6a0fCda0CE76C31B1DBE226",
  "0x56357AC1132B40Dd2C91178A369A221705d6f5C9",
  "0x441bB8198950a65f0Fe9636c38875711584547D2",
  "0x30346Cea2E77b0135d6B0A696f5a6c2a0b8c7Bdf",
  "0xBd807675490eE325Af6B862509e74e3A7D5488dc",
  "0x4BB9eAdcB444F48406a3d1A6Bb1C47152D9077BB",
  "0xFd4819bC5BF7354D5FC5f6d500a3Dd3eDBd5902A",
  "0x95963E27587F02b426A74f892223312B5d7AEeD2",
  "0x71609A1E19458eb2277FA68369efb7e54649FB18",
  "0xa10CD0731AFE9655FD1b878169c6CA77b096DaD6",
  "0x13BBC88c32e9fBf21A1fbcb05d53fFb13d60f2Ec",
  "0xDC10e10CD306BD368C3D6E2775Be7C512a089c23",
  "0xb9071005a317Ab4AE61875cb48a7acF04685F378",
  "0xF6cBe014C6F9a003137a9FA5Ac63635449ec8633",
  "0xF02162265754A857984019494f080C1E4b3A30CA",
  "0x14c750d6315b391414E138Beba11CC2ef6Ce4Ae4",
  "0x59A9AA2E12e9c7bF52B86E86747e395c53666EC8",
  "0xCa35c0f8653F459d927DE6068962d6A3B971d71E",
  "0xFB8c2198BcF601c2C2b15714e34d8CbEB7188e0d",
  "0x4816F413B51aC110820A0b47d51505EE71744CB4",
  "0x42CaCf1cAFc3313382cF8e3bC2AF5421A78e9DEa",
  "0x3c2B926b3F6A493Af0dB0F5233b1E5bdF79a70De",
  "0x5B31023E0C858B14f0800249542f87B68B781E4c",
  "0x7cca29b56A1Bb9439B813618E8Fe445208073d65",
  "0xA168dAccd22a5C9A60435e829cc0caef5bf42320",
  "0xD59122E1D1fad6D436562Dc75741CFa66082c48a",
  "0x7AaCC02593CC7e7FDa2728208C2a4c6A554993fe",
  "0x45b02BA636832FD9EB838177Cf492d11C54766d9",
  "0xD7C24eB71b55cFB3e3C89Ef7bbaF27fdB7105Fe6",
  "0xe0d691d3fe5b94961c4bca33e50fe95c340f04e4",
  "0x22bbAa0ce3b31DBF5Aedb95541363EE7A0A73AC1",
  "0x44E765C7559E6f30896Bc90A4025720fe0aD5BDc",
  "0x0660fc2DB4AD1f9e5Db1aECceE3F7b9Ad4D10740",
  "0xA90Fd1DE9151E5cF394c2E5528f0111d7cB30417",
  "0x1e7d6cb76f5d8f5b51cdd3f05352b9159bc70057",
  "0xBC5F129Cfae812D4CDa16A44A4e0bdE46c29eB05",
  "0x6E2F85e34Da4C950c88e838719Ef250c69Bcb494",
  "0x15719D37d81A0A490AF6B143FFB3c84613d77a7b",
  "0x36861edDFCf9166D2Fc639cdf2b6AF9891B4fF4e",
  "0xC6344d806261b43860B861a5ac5A02a50535d823",
  "0x16d8F2F61AA49eCceF3C23280faF8E891BeeE2d7",
  "0x780d83957FaF5AcA926A64E236e967d3e7A00f52",
  "0x07A95F873E0bF7F9EB2B889Ee18e5CBf956AE8a1",
  "0x333Db4c3EA1fF9212bB5243269870c74DF29B9bD",
  "0x05Bf1656aA8BAdEdd9DF18892E0a272462CA5D10",
  "0x189Af1E234181Ee6a88Bba6904D43B651785Baf5",
  "0x44860c02de02815fDAe52178643d5554247E66f3",
  "0x7D531da75FB43f464385122e6B30a9c6C2DBf5E0",
  "0x0468A77FF9b357E8B595de5b648f586Ef9004328",
  "0xf3A97df0B38f64E241352547EbB4B6C1ae1A74F4",
  "0x2A34D6dba61b1d2203ee5d4Ae724DD7Fc22C723A",
  "0x681f9b8167B7f0Fe598c62a581A44FCc19450E27",
  "0x0f7AC6f9Bde56eF4aAb40B0208A522F271104D00",
  "0x7f0D22F0F7029FCe90E4Fc7675C0284C64253C76",
  "0xb4553c3B67d1fDFf6F26Db717c18312E90Ee0961",
  "0xdb5A04b5Ea3B02A20c28c4731a06B2D29591d6C9",
  "0x8219556965e435fCE593EEcE87A581d6F01eAb67",
  "0x462233f988488D2C459DAF53C6a9C98a3D2a484c",
  "0xF63605F715bf1a7579A642012C05ff007514AEA6",
  "0x84A23D32780aA20A874319170cf4CCe4D7988727",
  "0xAB4f56F161D84BFbe35A4936f926F2a7Fb2B8656",
  "0x06100Ccadc8b0A571071D6608a756c8e4D51fd44",
  "0x03C472ea332b4f139491ba121bE6226Bcb70dB87",
  "0x681f9b8167B7f0Fe598c62a581A44FCc19450E27",
  "0x9f98f7A16db4957e22B22485c8E3aEC42e18c93f",
  "0xA586C5C31CF6731eca8440282d70f1846c4927CD",
  "0x9dd6F9D54Bc31DC24d79fC46dE8F9684C0D998E8",
  "0xe5Ef5aAE73b05fa47c5333277401f19b3c5AEae6",
  "0x9849741CC4CF769435151C6526425206d9b95C03",
  "0xA586C5C31CF6731eca8440282d70f1846c4927CD",
  "0x6A6259cEBf1405D1818C982Ea62287Aa3C57DD31",
  "0x34eb17E7BB046b1903A2cad3e8147278947e35fA",
  "0x0DcfD797B0A89653Cf96C7C508F3FA6E7c779866",
  "0x8fDb76432356F3Aa0F666ccC9acff32B364C5a8c",
  "0xf28A7F9b28B5797cC12F2f267d51ED001Bc513bC",
  "0x45b02BA636832FD9EB838177Cf492d11C54766d9",
  "0xfcb6bf99C1B4eF526824Db44F14560b5aBa5B3A7",
  "0xfb1579C62873f6B01dfe45cA20a9C6ED5cE58EDc",
  "0x12569E01f1F8d64AC0367B5ECA6948EABa5D97e2",
  "0x13A11B663a9B6301E7848Afb0478CFdE91CB8f78",
  "0x3bDD16e51E1ceEEB40C808aF98184B65cbd89f2c",
  "0xE9aB13d9e9d755BEdCE2593d49aBCB0abEdcdd49",
  "0x12e016dA9C6d90fc0D9cE2Ac337c948f62c9Fa4a",
  "0x56981bace85a556D440062EC2bC57eF359182198",
  "0x6F4F941B3818F7E09Ed892B7cd1ba3915E8B992c",
  "0x05Bf1656aA8BAdEdd9DF18892E0a272462CA5D10",
  "0xac57Cb94208E66Dc4942F8816975323BBD9da8e2",
  "0x1617000c89FdEC81eAc30D73D6D4D92175E14222",
  "0x12C1C7A381943AD3a1479883e288f9744D690FbF",
  "0xE2CF8FfC8b9905c3F8B8Dd3365E54c7EcdCF4cA7",
  "0x6F4F941B3818F7E09Ed892B7cd1ba3915E8B992c",
  "0xd3A73311325B486f4c82ca882e380C8449E5b9d5",
  "0xb23D89515E3f5F6a2FB827e54234e2581394FA67",
  "0x9f98f7A16db4957e22B22485c8E3aEC42e18c93f",
  "0x3c3CeB7E79F947424229F5e9Dba9b2F2a1FaCC0e",
  "0x99c531A770FDa06dbF4e657FBF1514408951323B",
  "0xE2CF8FfC8b9905c3F8B8Dd3365E54c7EcdCF4cA7",
  "0x8023318BA5CfF1676cB91d6b127F07414756d8b9",
  "0xf5e9daAc36278617BEe0b61e289187B60C8D3A4C",
  "0xc48aFc5Aa2D72A448ff46c3db0841AE4C9E4858f",
  "0xc7155Bf4215fb430AebD9Ecd40E0996a52f571ee",
  "0x88e137bd3C1d8E94162B48034b221335f7aCe9ff",
  "0xAABE52B88a5Ce0925fEe295742E13A6d80a95C0D",
  "0xac57Cb94208E66Dc4942F8816975323BBD9da8e2",
  "0x0DcfD797B0A89653Cf96C7C508F3FA6E7c779866",
  "0x5f422e19d28195c74b982da5cb1d5da3145a3af2",
  "0x0345475becdde3fe93ce95e45394c7502708727b",
  "0xb7DEBa1D036E5822fC6Cd4d82269A95533037e19",
  "0x6A6259cEBf1405D1818C982Ea62287Aa3C57DD31",
  "0x88e137bd3C1d8E94162B48034b221335f7aCe9ff",
  "0x99c531A770FDa06dbF4e657FBF1514408951323B",
  "0x84A23D32780aA20A874319170cf4CCe4D7988727",
  "0x5cb21a14e18E0b185293EBd8c4499BfcDa156Db1",
  "0xf74C40A811F7d3Ac45AE5f73fF17138d03016818",
];

let leaves = addresses.map((addr) => keccak256(addr));

// Merkle Tree

let merkleTree = new MerkleTree(leaves, keccak256, { sortPairs: true });

//Get Root

let rootHash = merkleTree.getRoot().toString("hex");

//Get Proof

const getProof = (address) => {
  let hashedAddress = keccak256(address);
  let proof = merkleTree.getHexProof(hashedAddress);
  return proof;
};

app.get("/", (req, res) => {
  res.json("Hello NFT world!");
});

app.get("/all", (req, res) => {
  res.json({ addresses: addresses });
});

app.get("/proof/:address", (req, res) => {
  res.json({ proof: getProof(req.params.address) });
});

app.listen(PORT, () => console.log(`Running on ${PORT} ⚡`));
